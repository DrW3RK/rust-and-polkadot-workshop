diff --git a/src/balances.rs b/src/balances.rs
index 9f4fcd7..1f051d9 100644
--- a/src/balances.rs
+++ b/src/balances.rs
@@ -1,27 +1,27 @@
 use std::collections::BTreeMap;
 
 /// This is the Balances Module.
 /// It is a simple module which keeps track of how much balance each account has in this state
 /// machine.
 pub struct Pallet {
 	// A simple storage mapping from accounts (`&'static str`) to their balances (`u128`).
 	balances: BTreeMap<&'static str, u128>,
 }
 
 impl Pallet {
 	/// Create a new instance of the balances module.
 	pub fn new() -> Self {
 		Self { balances: BTreeMap::new() }
 	}
 
 	/// Set the balance of an account `who` to some `amount`.
 	pub fn set_balance(&mut self, who: &'static str, amount: u128) {
-		/* Insert `amount` into the BTreeMap under `who`. */
+		self.balances.insert(who, amount);
 	}
 
 	/// Get the balance of an account `who`.
 	/// If the account has no stored balance, we return zero.
 	pub fn balance(&self, who: &'static str) -> u128 {
-		/* Return the balance of `who`, returning zero if `None`. */
+		*self.balances.get(&who).unwrap_or(&0)
 	}
 }
